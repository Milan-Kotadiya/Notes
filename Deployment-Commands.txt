sudo apt update
sudo apt install nodejs
sudo apt install npm
sudo npm install pm2@latest -g
node -v                      # Check Node.js version
npm -v                       # Check npm version
sudo apt update
sudo apt install nginx
sudo systemctl start nginx    # Start Nginx service
sudo systemctl enable nginx   # Enable Nginx to start at boot
sudo apt install ufw
sudo ufw status               # Check the current UFW status
sudo ufw app list             # See the list of available UFW applications
sudo ufw enable               # Enable the firewall
sudo ufw status               # Check UFW status after enabling
sudo ufw allow ssh            # Ensure SSH access (For connect)
sudo ufw allow 80             # http
sudo ufw allow 443            # https
sudo ufw reload               # Reload the firewall rules
sudo ufw status               # Check that SSH and other rules are applied
pm2 start <your-app-file>     # Start your Node.js app using PM2
pm2 save                      # Save the PM2 process list
pm2 startup                   # Create startup script for PM2
systemctl status nginx        # Ensure Nginx is running



server {
    listen 80;
    server_name khetiwala.com www.khetiwala.com;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}

# HTTPS server configuration
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name khetiwala.com www.khetiwala.com;

    ssl_certificate /etc/letsencrypt/live/khetiwala.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/khetiwala.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    root /var/www/html/build;  # Path to your React app's build folder
    index index.html;

    location /api/ {
        proxy_pass http://localhost:8080/api/;  # Forward API requests to the backend
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location / {
        try_files $uri /index.html;  # Fallback to index.html for React routing
    }
}
